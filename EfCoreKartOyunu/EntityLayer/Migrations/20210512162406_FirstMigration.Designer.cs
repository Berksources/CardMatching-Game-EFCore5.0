// <auto-generated />
using System;
using EntityLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityLayer.Migrations
{
    [DbContext(typeof(KartOyunuDBContext))]
    [Migration("20210512162406_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.GameCart.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CartName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FirstFileRepoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SecondFileRepoID")
                        .HasColumnType("int");

                    b.HasKey("CartID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("EntityLayer.GameCart.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CategoryIsActive")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EntityLayer.GameCart.FileRepo", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FilePhotoIsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FileID");

                    b.HasIndex("CartID");

                    b.ToTable("FirstFileRepos");
                });

            modelBuilder.Entity("EntityLayer.Result.GameVariant", b =>
                {
                    b.Property<int>("GameVariantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("GameIsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("GameIsOver")
                        .HasColumnType("bit");

                    b.Property<int>("GameQuestionCount")
                        .HasColumnType("int");

                    b.Property<int>("GameScoreCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GameVariantID");

                    b.ToTable("GameVariants");

                    b.HasData(
                        new
                        {
                            GameVariantID = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataGuidID = new Guid("d3929b90-a6fc-4c64-afd9-27ec58aeb754"),
                            GameIsCompleted = false,
                            GameIsOver = false,
                            GameQuestionCount = 0,
                            GameScoreCount = 0
                        });
                });

            modelBuilder.Entity("EntityLayer.Result.ScoreTable", b =>
                {
                    b.Property<int>("ScoreTableID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScoreData")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ScoreTableID");

                    b.ToTable("ScoreTables");

                    b.HasData(
                        new
                        {
                            ScoreTableID = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataGuidID = new Guid("262bcab6-87e0-4b59-99fd-ac0210ac9d87"),
                            ScoreData = 7600,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("EntityLayer.UserConfig.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UserIsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("UserIsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("UserLastScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedDate = new DateTime(2021, 5, 12, 19, 24, 5, 647, DateTimeKind.Local).AddTicks(3404),
                            DataGuidID = new Guid("d9c0685e-59fb-4d01-ab90-3bd415568fc8"),
                            UserEMail = "AdminPaneli@gmail.com",
                            UserIsActive = true,
                            UserIsEmailConfirmed = true,
                            UserName = "Admin",
                            UserPassword = "AdminGitHub",
                            UserRoleID = 1,
                            UserSurname = "Admin"
                        },
                        new
                        {
                            UserID = 2,
                            CreatedDate = new DateTime(2021, 5, 12, 19, 24, 5, 650, DateTimeKind.Local).AddTicks(2929),
                            DataGuidID = new Guid("efd0175d-24c3-4e52-8b35-ecc1bbacce30"),
                            UserEMail = "Kullanici@gmail.com",
                            UserIsActive = true,
                            UserIsEmailConfirmed = true,
                            UserName = "Kullanici",
                            UserPassword = "KullaniciGitHub",
                            UserRoleID = 2,
                            UserSurname = "Kullanici"
                        });
                });

            modelBuilder.Entity("EntityLayer.UserConfig.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleID = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataGuidID = new Guid("18e1536f-7802-4f23-a38a-47f39354cce7"),
                            UserRoleName = "Admin"
                        },
                        new
                        {
                            UserRoleID = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataGuidID = new Guid("a95081c6-65dc-4712-8484-fc77affa597f"),
                            UserRoleName = "Oyuncu"
                        });
                });

            modelBuilder.Entity("EntityLayer.GameCart.Cart", b =>
                {
                    b.HasOne("EntityLayer.GameCart.Category", "Category")
                        .WithMany("Carts")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EntityLayer.GameCart.FileRepo", b =>
                {
                    b.HasOne("EntityLayer.GameCart.Cart", "Cart")
                        .WithMany("FirstFileRepos")
                        .HasForeignKey("CartID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("EntityLayer.Result.ScoreTable", b =>
                {
                    b.HasOne("EntityLayer.UserConfig.User", "User")
                        .WithMany("ScoreTables")
                        .HasForeignKey("ScoreTableID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("User");
                });

            modelBuilder.Entity("EntityLayer.UserConfig.User", b =>
                {
                    b.HasOne("EntityLayer.UserConfig.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("EntityLayer.GameCart.Cart", b =>
                {
                    b.Navigation("FirstFileRepos");
                });

            modelBuilder.Entity("EntityLayer.GameCart.Category", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("EntityLayer.UserConfig.User", b =>
                {
                    b.Navigation("ScoreTables");
                });

            modelBuilder.Entity("EntityLayer.UserConfig.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
